/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Admin, AdminInterface } from "../Admin";

const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
        ],
        name: "OwnershipRenounced",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "changeOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b506040516103da3803806103da83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610349806100916000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063a6f9dae11461007f575b600080fd5b61004e610092565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e61008d3660046102e5565b61013a565b6000546001600160a01b031633146100f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546001600160a01b0319811682556040516001600160a01b039091169182917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c648209190a250565b6000546001600160a01b031633146101945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100e8565b6000546001600160a01b0390811690821681141561021a5760405162461bcd60e51b815260206004820152603d60248201527f6368616e67654f776e65723a20746865206f776e6572206d757374206265206460448201527f6966666572656e742066726f6d207468652063757272656e74206f6e6500000060648201526084016100e8565b6001600160a01b0382166102965760405162461bcd60e51b815260206004820152603960248201527f6368616e67654f776e65723a206f776e6572206e65656420746f20626520646960448201527f66666572656e742066726f6d207a65726f20616464726573730000000000000060648201526084016100e8565b600080546001600160a01b0319166001600160a01b0384811691821783556040519192908416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102f6578081fd5b81356001600160a01b038116811461030c578182fd5b939250505056fea26469706673582212206095f37880b664887b9caeb841c3ac1ed4205269c04bef2e5c515fd8c66d1afc64736f6c63430008040033";

type AdminConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: AdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Admin__factory extends ContractFactory {
    constructor(...args: AdminConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    deploy(
        _owner: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<Admin> {
        return super.deploy(_owner, overrides || {}) as Promise<Admin>;
    }
    getDeployTransaction(
        _owner: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_owner, overrides || {});
    }
    attach(address: string): Admin {
        return super.attach(address) as Admin;
    }
    connect(signer: Signer): Admin__factory {
        return super.connect(signer) as Admin__factory;
    }
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): AdminInterface {
        return new utils.Interface(_abi) as AdminInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): Admin {
        return new Contract(address, _abi, signerOrProvider) as Admin;
    }
}
