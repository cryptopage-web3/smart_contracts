/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ISAFE, ISAFEInterface } from "../ISAFE";

const _abi = [
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_safe",
                type: "address[]",
            },
        ],
        name: "addSafe",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
        ],
        name: "changeSafe",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_safe",
                type: "address",
            },
        ],
        name: "isSafe",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_safe",
                type: "address",
            },
        ],
        name: "removeSafe",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export class ISAFE__factory {
    static readonly abi = _abi;
    static createInterface(): ISAFEInterface {
        return new utils.Interface(_abi) as ISAFEInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): ISAFE {
        return new Contract(address, _abi, signerOrProvider) as ISAFE;
    }
}
