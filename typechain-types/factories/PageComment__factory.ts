/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PageComment, PageCommentInterface } from "../PageComment";

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "uid",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "text",
                type: "string",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "like",
                type: "bool",
            },
        ],
        name: "NewComment",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "text",
                type: "string",
            },
            {
                internalType: "bool",
                name: "like",
                type: "bool",
            },
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "_comment",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "commentsById",
        outputs: [
            {
                internalType: "uint256",
                name: "uid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                internalType: "string",
                name: "text",
                type: "string",
            },
            {
                internalType: "bool",
                name: "like",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalStats",
        outputs: [
            {
                internalType: "uint256",
                name: "comments",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "likes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "dislikes",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107da8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063224696f214610067578063715018a61461008f5780638da5cb5b146100995780639940d9c2146100b4578063c0e7c32d146100c7578063f2fde38b146100ea575b600080fd5b61006f6100fd565b604080519384526020840192909252908201526060015b60405180910390f35b610097610128565b005b6000546040516001600160a01b039091168152602001610086565b6100976100c23660046105bf565b610167565b6100da6100d536600461068c565b61029d565b60405161008694939291906106d9565b6100976100f83660046105a5565b61035c565b600080600061010b60035490565b925061011660045490565b915061012160055490565b9050909192565b6000546001600160a01b0316331461015b5760405162461bcd60e51b8152600401610152906106a4565b60405180910390fd5b61016560006103f7565b565b6000546001600160a01b031633146101915760405162461bcd60e51b8152600401610152906106a4565b600061019c60035490565b6001600160a01b03831660009081526002602052604090209091506101c19082610447565b50604080516080810182528281526001600160a01b03848116602080840191825283850189815288151560608601526000878152600180845296902085518155925195830180546001600160a01b03191696909416959095179092559251805192939261023492600285019201906104e0565b50606091909101516003909101805460ff19169115159190911790556040517fe0a53cd07771af9e14cb32a4254f2ec669df05631af3c2a85448188f097c9ec4906102869083908590889088906106d9565b60405180910390a16102978361045c565b50505050565b60016020819052600091825260409091208054918101546002820180546001600160a01b0390921692916102d090610753565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc90610753565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050506003909301549192505060ff1684565b6000546001600160a01b031633146103865760405162461bcd60e51b8152600401610152906106a4565b6001600160a01b0381166103eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610152565b6103f4816103f7565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104538383610491565b90505b92915050565b801561047557610470600480546001019055565b610483565b610483600580546001019055565b6103f4600380546001019055565b60008181526001830160205260408120546104d857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610456565b506000610456565b8280546104ec90610753565b90600052602060002090601f01602090048101928261050e5760008555610554565b82601f1061052757805160ff1916838001178555610554565b82800160010185558215610554579182015b82811115610554578251825591602001919060010190610539565b50610560929150610564565b5090565b5b808211156105605760008155600101610565565b80356001600160a01b038116811461059057600080fd5b919050565b8035801515811461059057600080fd5b6000602082840312156105b6578081fd5b61045382610579565b6000806000606084860312156105d3578182fd5b833567ffffffffffffffff808211156105ea578384fd5b818601915086601f8301126105fd578384fd5b81358181111561060f5761060f61078e565b604051601f8201601f19908116603f011681019083821181831017156106375761063761078e565b8160405282815289602084870101111561064f578687fd5b826020860160208301378660208483010152809750505050505061067560208501610595565b915061068360408501610579565b90509250925092565b60006020828403121561069d578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8481526000602060018060a01b03861681840152608060408401528451806080850152825b8181101561071a5786810183015185820160a0015282016106fe565b8181111561072b578360a083870101525b50601f01601f1916830160a001915061074a9050606083018415159052565b95945050505050565b600181811c9082168061076757607f821691505b6020821081141561078857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220657f728f20074161f21b24b9f5c520b126ceaec30350ea1eb76027ee3b551b8764736f6c63430008040033";

type PageCommentConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: PageCommentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PageComment__factory extends ContractFactory {
    constructor(...args: PageCommentConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    deploy(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PageComment> {
        return super.deploy(overrides || {}) as Promise<PageComment>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): PageComment {
        return super.attach(address) as PageComment;
    }
    connect(signer: Signer): PageComment__factory {
        return super.connect(signer) as PageComment__factory;
    }
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PageCommentInterface {
        return new utils.Interface(_abi) as PageCommentInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): PageComment {
        return new Contract(address, _abi, signerOrProvider) as PageComment;
    }
}
