/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PageProfile, PageProfileInterface } from "../PageProfile";

const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_pageMinter",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "title",
                type: "string",
            },
            {
                internalType: "string",
                name: "url",
                type: "string",
            },
        ],
        name: "_add_social",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "text",
                type: "string",
            },
        ],
        name: "_add_status",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "pageMinter",
        outputs: [
            {
                internalType: "contract IMINTER",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "socialById",
        outputs: [
            {
                internalType: "uint256",
                name: "uid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                internalType: "string",
                name: "title",
                type: "string",
            },
            {
                internalType: "string",
                name: "url",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "statusById",
        outputs: [
            {
                internalType: "uint256",
                name: "uid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                internalType: "string",
                name: "text",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b5060405161086038038061086083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6107cf806100916000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e2d2d661461005c5780631d79ab341461008757806368652db6146100b2578063958caea4146100c7578063ecffe399146100ea575b600080fd5b61006f61006a36600461066b565b6100fd565b60405161007e939291906106ce565b60405180910390f35b60005461009a906001600160a01b031681565b6040516001600160a01b03909116815260200161007e565b6100c56100c036600461060a565b6101b2565b005b6100da6100d536600461066b565b61026f565b60405161007e9493929190610701565b6100c56100f83660046105cf565b6103b2565b60056020526000908152604090208054600182015460028301805492936001600160a01b039092169261012f90610748565b80601f016020809104026020016040519081016040528092919081815260200182805461015b90610748565b80156101a85780601f1061017d576101008083540402835291602001916101a8565b820191906000526020600020905b81548152906001019060200180831161018b57829003601f168201915b5050505050905083565b60006101bd60015490565b336000818152600460205260409020919250906101da908361044b565b50604080516080810182528381526001600160a01b03838116602080840191825283850189815260608501899052600088815260038352959095208451815591516001830180546001600160a01b03191691909416179092559251805192939261024a92600285019201906104af565b50606082015180516102669160038401916020909101906104af565b50505050505050565b60036020526000908152604090208054600182015460028301805492936001600160a01b03909216926102a190610748565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90610748565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b50505050509080600301805461032f90610748565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610748565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905084565b60006103bd60025490565b336000818152600660205260409020919250906103da908361044b565b50604080516060810182528381526001600160a01b038381166020808401918252838501888152600088815260058352959095208451815591516001830180546001600160a01b03191691909416179092559251805192939261044392600285019201906104af565b505050505050565b60006104578383610460565b90505b92915050565b60008181526001830160205260408120546104a75750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561045a565b50600061045a565b8280546104bb90610748565b90600052602060002090601f0160209004810192826104dd5760008555610523565b82601f106104f657805160ff1916838001178555610523565b82800160010185558215610523579182015b82811115610523578251825591602001919060010190610508565b5061052f929150610533565b5090565b5b8082111561052f5760008155600101610534565b600082601f830112610558578081fd5b813567ffffffffffffffff8082111561057357610573610783565b604051601f8301601f19908116603f0116810190828211818310171561059b5761059b610783565b816040528381528660208588010111156105b3578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156105e0578081fd5b813567ffffffffffffffff8111156105f6578182fd5b61060284828501610548565b949350505050565b6000806040838503121561061c578081fd5b823567ffffffffffffffff80821115610633578283fd5b61063f86838701610548565b93506020850135915080821115610654578283fd5b5061066185828601610548565b9150509250929050565b60006020828403121561067c578081fd5b5035919050565b60008151808452815b818110156106a85760208185018101518683018201520161068c565b818111156106b95782602083870101525b50601f01601f19169290920160200192915050565b8381526001600160a01b03831660208201526060604082018190526000906106f890830184610683565b95945050505050565b8481526001600160a01b038416602082015260806040820181905260009061072b90830185610683565b828103606084015261073d8185610683565b979650505050505050565b600181811c9082168061075c57607f821691505b6020821081141561077d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bd4d29d4992b872d4855ce82f658b86185d2132065a6db7f6d432d6746f1514164736f6c63430008040033";

type PageProfileConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: PageProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PageProfile__factory extends ContractFactory {
    constructor(...args: PageProfileConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    deploy(
        _pageMinter: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PageProfile> {
        return super.deploy(
            _pageMinter,
            overrides || {}
        ) as Promise<PageProfile>;
    }
    getDeployTransaction(
        _pageMinter: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_pageMinter, overrides || {});
    }
    attach(address: string): PageProfile {
        return super.attach(address) as PageProfile;
    }
    connect(signer: Signer): PageProfile__factory {
        return super.connect(signer) as PageProfile__factory;
    }
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PageProfileInterface {
        return new utils.Interface(_abi) as PageProfileInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): PageProfile {
        return new Contract(address, _abi, signerOrProvider) as PageProfile;
    }
}
