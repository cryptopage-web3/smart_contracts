/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PageNFTMarket, PageNFTMarketInterface } from "../PageNFTMarket";

const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_pageNFT",
                type: "address",
            },
            {
                internalType: "address",
                name: "_pageMinter",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "pageMinter",
        outputs: [
            {
                internalType: "contract IMINTER",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pageNFT",
        outputs: [
            {
                internalType: "contract INFTMINT",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pageToken",
        outputs: [
            {
                internalType: "contract IERCMINT",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b5060405161018538038061018583398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b60c9806100bc6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80631d79ab34146041578063b180778314606f578063cd0cfee4146081575b600080fd5b6001546053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6002546053906001600160a01b031681565b6000546053906001600160a01b03168156fea2646970667358221220c02f74db786fae78da5f60f9efe99587ae1d38efd441faeb22f674918741073e64736f6c63430008040033";

type PageNFTMarketConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: PageNFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PageNFTMarket__factory extends ContractFactory {
    constructor(...args: PageNFTMarketConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    deploy(
        _pageNFT: string,
        _pageMinter: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PageNFTMarket> {
        return super.deploy(
            _pageNFT,
            _pageMinter,
            overrides || {}
        ) as Promise<PageNFTMarket>;
    }
    getDeployTransaction(
        _pageNFT: string,
        _pageMinter: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(
            _pageNFT,
            _pageMinter,
            overrides || {}
        );
    }
    attach(address: string): PageNFTMarket {
        return super.attach(address) as PageNFTMarket;
    }
    connect(signer: Signer): PageNFTMarket__factory {
        return super.connect(signer) as PageNFTMarket__factory;
    }
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PageNFTMarketInterface {
        return new utils.Interface(_abi) as PageNFTMarketInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): PageNFTMarket {
        return new Contract(address, _abi, signerOrProvider) as PageNFTMarket;
    }
}
